version: '3.7'
services:

  alarmcontrol:
    image: denniskniep/alarmcontrol:1.4.0
    restart: always
    container_name: alarmcontrol
    ports:
      - 8080:8080
    volumes:
      - ./server/logs:/app/logs
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/${DATABASE_NAME}"
      SPRING_DATASOURCE_USERNAME: "${DATABASE_USER}"
      SPRING_DATASOURCE_PASSWORD: "${DATABASE_PASSWORD}"
      SPRING_PROFILES_ACTIVE: postgres
      GRAPHHOPPER_APIKEY: "${GRAPHHOPPER_APIKEY}"
      MAPBOX_ACCESS_TOKEN: "${MAPBOX_ACCESS_TOKEN}"
      FIREBASE_PUSH_AUTHORIZATION_HEADER: "${FIREBASE_PUSH_AUTHORIZATION_HEADER}"
      FIREBASE_USERNAME: "${FIREBASE_USERNAME}"
      FIREBASE_PASSWORD: "${FIREBASE_PASSWORD}"
      FIREBASE_PROJECT_ID: "${FIREBASE_PROJECT_ID}"
      FIREBASE_PUBLIC_API_KEY: "${FIREBASE_PUBLIC_API_KEY}"
      FIREBASE_APP_ID: "${FIREBASE_APP_ID}"
      FIREBASE_MESSAGING_SENDER_ID: "${FIREBASE_MESSAGING_SENDER_ID}"
      PAGER_URL: "${PAGER_URL}"
    command: ["/app/wait-for.sh", "postgres:5432", "--timeout=300", "--", "/app/docker-entrypoint.sh",
              "-Xms1g", "-Xmx4g", "-Duser.timezone=UTC", "-jar", "/app/alarmcontrol-server.jar"]
    networks: ['alarmcontrol-net']

  postgres:
    image: postgres:11.3
    restart: always
    volumes:
      - database-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    networks: ['alarmcontrol-net']

volumes:
  database-data: {}

networks: {alarmcontrol-net: {}}
