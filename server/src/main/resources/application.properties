spring.jpa.hibernate.ddl-auto=validate

map.graphhopper.routing.url=https://graphhopper.com/api/1/route
map.graphhopper.routing.apikey=${GRAPHHOPPER_APIKEY}

map.nominatim.geocoding.urlsearch=https://nominatim.openstreetmap.org/search

map.mapbox.geocoding.urlsearch=https://api.mapbox.com/geocoding/v5/mapbox.places/{searchQuery:}.json
map.mapbox.geocoding.accesstoken=${MAPBOX_ACCESS_TOKEN}

# Mail Notifications
spring.mail.host=${MAILSERVER_HOST:}
spring.mail.port=${MAILSERVER_PORT:}
spring.mail.properties.mail.smtp.auth=${MAILSERVER_USEAUTH:true}
spring.mail.username=${MAILSERVER_USERNAME:}
spring.mail.password=${MAILSERVER_PASSWORD:}

#Keycloak
keycloak.auth-server-url=http://keycloak:8080/auth
keycloak.realm=Alarmcontrol
keycloak.ssl-required=external
keycloak.resource=alarmcontrol-server
keycloak.public-client=true

# Firebase Notifications
notifications.firebase.username=${FIREBASE_USERNAME:}
notifications.firebase.password=${FIREBASE_PASSWORD:}
notifications.firebase.projectId=${FIREBASE_PROJECT_ID:}
notifications.firebase.publicApiKey=${FIREBASE_PUBLIC_API_KEY:}
notifications.firebase.messagingSenderId=${FIREBASE_MESSAGING_SENDER_ID:}
notifications.firebase.appId=${FIREBASE_APP_ID:}
notifications.pagerUrl=${PAGER_URL:}

notifications.firebase.push.url=${FIREBASE_PUSH_URL:https://fcm.googleapis.com/fcm/send}
notifications.firebase.push.authorizationHeader=${FIREBASE_PUSH_AUTHORIZATION_HEADER:}

notifications.firebase.database.url=${FIREBASE_DATABASE_URL:https://firestore.googleapis.com/v1beta1}
notifications.firebase.auth.url=${FIREBASE_AUTH_URL:https://identitytoolkit.googleapis.com/v1}

logging.jsonfile.path=logs/server
logging.level.ROOT=WARN
logging.level.com.alarmcontrol=INFO
logging.level.com.alarmcontrol.server.maps.mapbox.geocoding.MapboxParser=DEBUG
logging.level.org.zalando.logbook.Logbook=TRACE

# Rules for Inbound HTTP Requests and their corresponding responses
logbook.inbound.include[0]=/graphql/**
logbook.inbound.include[1]=/api/**
logbook.inbound.includeRequestBody[0]=/api/**
logbook.outbound.includeResponseBody[0]=/api/**

# Rules for Outbound HTTP Requests and their corresponding responses
# log everything (You must add an LogbookInterceptor to the HttpClient!)
logbook.outbound.include[0]=**
logbook.outbound.includeRequestBody[0]=**
logbook.inbound.includeResponseBody[0]=**

# Http Log Format (https://github.com/zalando/logbook#formatting)
logbook.format.style=jsonWithMessage

# Get Feiertage i.e. by: https://feiertage-api.de/api?jahr=2019&nur_land=HE
feiertage.path=classpath:feiertage/*

# Actuator
management.endpoints.web.exposure.include=health,prometheus
management.server.port=9999

# Health Endpoint
management.health.defaults.enabled=false
management.endpoint.health.show-details=never
